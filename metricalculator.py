# -*- coding: utf-8 -*-
"""metricalculator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GieRx_5qIeVnoVeMqD__L-wt1N_ZphcO
"""

import pandas as pd
import numpy as np
from google.colab import files

def calculate_h_index(citations):
    citations_sorted = np.sort(citations)[::-1]
    h_index = np.sum(citations_sorted >= np.arange(1, len(citations_sorted) + 1))
    return h_index

def calculate_g_index_alt(citations):
    citations_sorted = np.sort(citations)[::-1]
    g_index = 0
    total_citations = 0

    for i, citation_count in enumerate(citations_sorted, start=1):
        total_citations += citation_count
        if total_citations >= i**2:
            g_index = i

    return g_index

def process_excel_files(uploaded_files):
    result_rows = []

    for file_name in uploaded_files.keys():
        xls = pd.ExcelFile(file_name)

        for sheet_name in xls.sheet_names:
            df = pd.read_excel(xls, sheet_name=sheet_name)

            citations = df['Cites'].values

            M = np.max(citations)
            N = len(citations)
            h_index = calculate_h_index(citations)
            g_index = calculate_g_index_alt(citations)

            result_row = {
                'File': file_name,
                'Sheet': sheet_name,
                'M': M,
                'N': N,
                'h-index': h_index,
                'g-index': g_index
            }
            result_rows.append(result_row)

    result_df = pd.DataFrame(result_rows)
    return result_df

uploaded = files.upload()
results_df = process_excel_files(uploaded)

output_filename = 'metrics_summary.xlsx'
results_df.to_excel(output_filename, index=False)
files.download(output_filename)