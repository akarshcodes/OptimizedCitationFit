# -*- coding: utf-8 -*-
"""OUTLIER.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Va9U3qGK2WbB4k55j_vsa6PWDk-As67z
"""

import pandas as pd
import numpy as np

file_path = '/content/fig metrics.xlsx'
excel_data = pd.ExcelFile(file_path)
sheet_name = excel_data.sheet_names[0]
df = pd.read_excel(file_path, sheet_name=sheet_name)

index_pairs = [
    ('g-index', 'new-g-index'),
    ('a-index', 'new-a-index'),
    ('r-index', 'new-r-index'),
    ('hg-index', 'new-hg-index'),
    ('e-index', 'new-e-index'),
    ('h-prime', 'new-h-prime')
]

def calculate_z_score(value, mean, std):
    return (value - mean) / std

def is_outlier_iqr(value, Q1, Q3):
    IQR = Q3 - Q1
    lower_bound = Q1 - 1.5 * IQR
    upper_bound = Q3 + 1.5 * IQR
    return value < lower_bound or value > upper_bound

outlier_results = pd.DataFrame(columns=['Index Pair', 'Original Value', 'New Value', 'Difference', 'Z-score', 'Is Outlier IQR', 'File', 'Sheet'])

for original_index, new_index in index_pairs:
    original_values = df[original_index]
    new_values = df[new_index]
    differences = new_values - original_values
    mean_diff = differences.mean()
    std_diff = differences.std()
    Q1 = differences.quantile(0.25)
    Q3 = differences.quantile(0.75)

    for i, (original_value, new_value, diff) in enumerate(zip(original_values, new_values, differences)):
        z_score = calculate_z_score(diff, mean_diff, std_diff)
        outlier_iqr = is_outlier_iqr(diff, Q1, Q3)

        if outlier_iqr:
            outlier_results = pd.concat([outlier_results, pd.DataFrame({
                'Index Pair': [f'{original_index} vs {new_index}'],
                'Original Value': [original_value],
                'New Value': [new_value],
                'Difference': [diff],
                'Z-score': [z_score],
                'Is Outlier IQR': [outlier_iqr],
                'File': [df.at[i, 'File']],
                'Sheet': [df.at[i, 'Sheet']]
            })], ignore_index=True)

output_file_path = '/content/fig metrics00.xlsx'
with pd.ExcelWriter(output_file_path, engine='openpyxl') as writer:
    df.to_excel(writer, sheet_name=sheet_name, index=False)
    outlier_results.to_excel(writer, sheet_name='Outliers', index=False)

print("Outlier analysis complete. Results saved to the 'Outliers' sheet in the output Excel file.")