# -*- coding: utf-8 -*-
"""all histograms

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FEM06kzkidSxFg3ZDpIbrbbTEHyAvph_
"""

!pip install pandas numpy matplotlib python-docx openpyxl scipy
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files

def calculate_h_index(y_data):
    sorted_cites = np.sort(y_data)[::-1]
    h_index = np.max(np.where(sorted_cites >= np.arange(1, len(sorted_cites) + 1))[0]) + 1
    return h_index

def calculate_M(y_data):
    return np.max(y_data)

def calculate_N(y_data):
    return len(y_data)

def optimal_bins(data):
    bins = int(np.ceil(np.log2(len(data)) + 1))
    return bins

uploaded = files.upload()

file_name = list(uploaded.keys())[0]
xls = pd.ExcelFile(file_name)

h_indices = []
M_values = []
N_values = []

for sheet_name in xls.sheet_names:
    df = pd.read_excel(xls, sheet_name=sheet_name)
    if 'ECC' in df.columns:
        ecc_values = df['ECC'].dropna().values
        h_indices.append(calculate_h_index(ecc_values))
        M_values.append(calculate_M(ecc_values))
        N_values.append(calculate_N(ecc_values))

bins_h = optimal_bins(np.array(h_indices))
bins_M = optimal_bins(np.array(M_values))
bins_N = optimal_bins(np.array(N_values))

plt.figure(figsize=(15, 5))

plt.subplot(1, 3, 1)
plt.hist(h_indices, bins=bins_h, edgecolor='black')
plt.xlabel('h-index bins')
plt.ylabel('Number of authors')
plt.title('Histogram of h-index values across all sheets')

plt.subplot(1, 3, 2)
plt.hist(M_values, bins=bins_M, edgecolor='black')
plt.xlabel('M bins')
plt.ylabel('Number of authors')
plt.title('Histogram of M values across all sheets')

plt.subplot(1, 3, 3)
plt.hist(N_values, bins=bins_N, edgecolor='black')
plt.xlabel('N bins')
plt.ylabel('Number of authors')
plt.title('Histogram of N values across all sheets')

plt.tight_layout()
plt.show()